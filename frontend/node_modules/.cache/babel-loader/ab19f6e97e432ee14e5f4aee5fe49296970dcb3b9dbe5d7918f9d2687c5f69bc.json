{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexa\\\\Desktop\\\\Work\\\\FRED\\\\frontend\\\\src\\\\ChatConsole\\\\MessageArea\\\\ChatHistory\\\\ChatHistory.jsx\";\nimport React, { Component } from 'react';\nimport AppContext, { AppProvider } from '../../../AppContext';\nimport styles from './ChatHistory.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ChatHistory extends Component {\n  constructor(props) {\n    super(props);\n    /**\r\n     * Returns the correct color according to the index of the message\r\n     * @param {*} index the order number of the message\r\n     * @returns \r\n     */\n    this.getUsernameStyle = index => {\n      return index % 2 === 1 ? styles.userMessage : styles.systemMessage;\n    };\n    /**\r\n     * Returns a string with either the user name or the message\r\n     * @param {*} element needed to access the object\r\n     * @param {*} index given needed index, either for username or message\r\n     * @returns \r\n     */\n    this.getObjectString = (element, index) => {\n      return this.context.mockHistory.messages[element][index];\n    };\n    /**\r\n     * Keeps the scroll pinned to the bottom when new elements appear in the chat\r\n     */\n    this.scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n    /**\r\n     * Gets the message history and renders the messages\r\n     * @returns Messages retrieved from the message history\r\n     */\n    this.getChatHistory = () => {\n      return Object.keys(this.context.mockHistory.messages).map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.message,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.getUsernameStyle(index),\n          children: this.getObjectString(element, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.getObjectString(element, 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this));\n    };\n    this.state = {\n      promptSubmitted: false\n    };\n  }\n  /**\r\n   * Recalls the scroll method when messages are added\r\n   */\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(AppProvider, {\n      children: this.context.mockHistory.messages && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.chatHistory,\n        children: [this.getChatHistory(), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"left\",\n            clear: \"both\"\n          },\n          ref: el => {\n            this.messagesEnd = el;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n}\nChatHistory.contextType = AppContext;","map":{"version":3,"names":["React","Component","AppContext","AppProvider","styles","jsxDEV","_jsxDEV","ChatHistory","constructor","props","getUsernameStyle","index","userMessage","systemMessage","getObjectString","element","context","mockHistory","messages","scrollToBottom","messagesEnd","scrollIntoView","behavior","getChatHistory","Object","keys","map","className","message","children","fileName","_jsxFileName","lineNumber","columnNumber","state","promptSubmitted","componentDidUpdate","render","chatHistory","style","float","clear","ref","el","contextType"],"sources":["C:/Users/alexa/Desktop/Work/FRED/frontend/src/ChatConsole/MessageArea/ChatHistory/ChatHistory.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport AppContext, { AppProvider } from '../../../AppContext'\r\nimport styles from './ChatHistory.module.scss'\r\n\r\nexport default class ChatHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            promptSubmitted: false\r\n        };\r\n    }\r\n\r\n    static contextType = AppContext;\r\n\r\n    /**\r\n     * Returns the correct color according to the index of the message\r\n     * @param {*} index the order number of the message\r\n     * @returns \r\n     */\r\n    getUsernameStyle = (index) => {\r\n        return index % 2 === 1 ?\r\n            styles.userMessage\r\n            : styles.systemMessage\r\n    }\r\n\r\n    /**\r\n     * Returns a string with either the user name or the message\r\n     * @param {*} element needed to access the object\r\n     * @param {*} index given needed index, either for username or message\r\n     * @returns \r\n     */\r\n    getObjectString = (element, index) => {\r\n        return this.context.mockHistory.messages[element][index];\r\n    }\r\n\r\n    /**\r\n     * Keeps the scroll pinned to the bottom when new elements appear in the chat\r\n     */\r\n    scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    /**\r\n     * Recalls the scroll method when messages are added\r\n     */\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    /**\r\n     * Gets the message history and renders the messages\r\n     * @returns Messages retrieved from the message history\r\n     */\r\n    getChatHistory = () => {\r\n        return Object.keys(this.context.mockHistory.messages).map((element, index) =>\r\n            <div className={styles.message} key={index}>\r\n                <div className={this.getUsernameStyle(index)}>{this.getObjectString(element, 0)}</div>\r\n                <div>{this.getObjectString(element, 1)}</div>\r\n            </div>\r\n        ); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppProvider>\r\n                {this.context.mockHistory.messages &&\r\n                    <div className={styles.chatHistory}>\r\n                        {this.getChatHistory()}\r\n                        \r\n                        {/* Dummy element that keeps the scroll on the bottom */}\r\n                        <div style={{ float: \"left\", clear: \"both\" }}   \r\n                            ref={(el) => { this.messagesEnd = el; }}>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </AppProvider>\r\n        )\r\n    }\r\n} \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}